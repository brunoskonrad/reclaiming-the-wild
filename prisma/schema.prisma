generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model koroks {
  id   String  @id @default(auto()) @map("_id") @db.ObjectId
  cute Boolean
  lost Boolean
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String?     @unique
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Character     Character[]
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Character {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  userId String  @db.ObjectId
  name   String?
  raceId String  @db.ObjectId

  tokenOfHeroism TokenOfHeroism

  // traits
  power   Power
  wisdom  Wisdom
  courage Courage

  hitPoint     Point
  manaPoint    Point
  staminaPoint Point

  user User @relation(fields: [userId], references: [id])
  race Race @relation(fields: [raceId], references: [id])
}

type Point {
  current   Int
  maximum   Int
  temporary Int @default(0)
}

type TokenOfHeroism {
  available Int
  total     Int
}

type Power {
  combat       Trait
  hearts       Trait
  athletics    Trait
  civilization Trait
  fortitude    Trait
  intimidate   Trait
  mechanics    Trait
  smithing     Trait
}

type Wisdom {
  willpower  Trait
  magic      Trait
  arcana     Trait
  perception Trait
  influence  Trait
  perform    Trait
  discipline Trait
  enchanting Trait
}

type Courage {
  accuracy Trait
  stamina  Trait
  nature   Trait
  agility  Trait
  command  Trait
  insight  Trait
  guile    Trait
  cooking  Trait
}

type Trait {
  trait Int @default(1)
  bonus Int @default(0)
}

model Race {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  primary       Boolean     @default(true)
  name          String      @unique
  vulnerability Element
  Character     Character[]
}

enum Element {
  Light
  Earth
  Dark
  Water
  Fire
  Ice
  Shock
}
